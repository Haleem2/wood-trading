{
    "openapi": "3.0.0",
    "info": {
        "title": "Wood Trading API",
        "description": "API for Wood Trading Application - A comprehensive system for managing wood inventory, sales, purchases, and financial operations.",
        "contact": {
            "name": "Wood Trading Support",
            "email": "support@woodtrading.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local Development Server"
        },
        {
            "url": "https://api.woodtrading.com/api",
            "description": "Production Server"
        },
        {
            "url": "D:\\Haleem-dev\\wood-trading"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@woodtrading.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "operationId": "df9bdc6c7a6d9f20b983526b2ec0f698",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "operationId": "b5de204f5e452ef51327c691aa99e77c",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get list of customers",
                "operationId": "1b873d7b0c63876f30a978b52c4d24d2",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for name or contact person",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CustomerResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer",
                "operationId": "747630c757eae4c38404384330e68c57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Construction Corp."
                                    },
                                    "contact_person": {
                                        "type": "string",
                                        "example": "John Builder"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@constructioncorp.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1-555-2000"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "500 Build Street, Construction City, CC 50000"
                                    },
                                    "tax_id": {
                                        "type": "string",
                                        "example": "CUST001"
                                    },
                                    "credit_limit": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CustomerResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer by ID",
                "operationId": "d03d1278b7e26322e9a425406bc4e9f2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CustomerResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update customer",
                "operationId": "32da1527afa82d1a6b0e034146f1032d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Construction Corp."
                                    },
                                    "contact_person": {
                                        "type": "string",
                                        "example": "John Builder"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@constructioncorp.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1-555-2000"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "500 Build Street, Construction City, CC 50000"
                                    },
                                    "tax_id": {
                                        "type": "string",
                                        "example": "CUST001"
                                    },
                                    "credit_limit": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100000
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CustomerResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete customer",
                "operationId": "e9f16ac94d63309225711a1f3dfb245a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/items": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get list of items",
                "operationId": "53e44209d7fe56acf154d9c0d47e5069",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for name, code, or species",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "species",
                        "in": "query",
                        "description": "Filter by species",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "grade",
                        "in": "query",
                        "description": "Filter by grade",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Items retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Create a new item",
                "operationId": "371ad8f4244d53c482a14de9004905a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "species",
                                    "grade",
                                    "thickness",
                                    "width",
                                    "length",
                                    "unit"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "PINE-2X4-8"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Pine 2x4 8ft"
                                    },
                                    "species": {
                                        "type": "string",
                                        "example": "Pine"
                                    },
                                    "grade": {
                                        "type": "string",
                                        "example": "A"
                                    },
                                    "thickness": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 38.1
                                    },
                                    "width": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 88.9
                                    },
                                    "length": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2438.4
                                    },
                                    "unit": {
                                        "type": "string",
                                        "example": "piece"
                                    },
                                    "barcode": {
                                        "type": "string",
                                        "example": "1234567890123"
                                    },
                                    "moisture_level": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 12
                                    },
                                    "low_stock_threshold": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "costing_method": {
                                        "type": "string",
                                        "enum": [
                                            "FIFO",
                                            "Average"
                                        ],
                                        "example": "FIFO"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Item created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/items/{id}": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get item by ID",
                "operationId": "cf72b0674e86263c9f13097ae1198063",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Update item",
                "operationId": "5946ad0f76a90167421f69b2ba2a086a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Pine 2x4 8ft"
                                    },
                                    "species": {
                                        "type": "string",
                                        "example": "Pine"
                                    },
                                    "grade": {
                                        "type": "string",
                                        "example": "A"
                                    },
                                    "thickness": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 38.1
                                    },
                                    "width": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 88.9
                                    },
                                    "length": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2438.4
                                    },
                                    "unit": {
                                        "type": "string",
                                        "example": "piece"
                                    },
                                    "barcode": {
                                        "type": "string",
                                        "example": "1234567890123"
                                    },
                                    "moisture_level": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 12
                                    },
                                    "low_stock_threshold": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "costing_method": {
                                        "type": "string",
                                        "enum": [
                                            "FIFO",
                                            "Average"
                                        ],
                                        "example": "FIFO"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Item updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ItemResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Delete item",
                "operationId": "264a2ea4d554347870bc1216f33f30a7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Item deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/stock": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get stock levels",
                "operationId": "1a8e72c4f6a7a5f6ec0996d1be80fa3d",
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "query",
                        "description": "Filter by item ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "warehouse_id",
                        "in": "query",
                        "description": "Filter by warehouse ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "low_stock",
                        "in": "query",
                        "description": "Show only low stock items",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stock levels retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StockLotResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/stock/adjust": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Adjust stock levels",
                "operationId": "1e9979969dcd2cb5e948dde1d1c28921",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "item_id",
                                    "warehouse_id",
                                    "quantity",
                                    "type",
                                    "reason"
                                ],
                                "properties": {
                                    "item_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "warehouse_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "adjustment"
                                        ],
                                        "example": "adjustment"
                                    },
                                    "movement": {
                                        "type": "string",
                                        "enum": [
                                            "in",
                                            "out"
                                        ],
                                        "example": "in"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "Physical count adjustment"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Found additional stock during inventory"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stock adjusted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stock adjusted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/StockLotResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CustomerResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "ABC Construction Ltd"
                    },
                    "contact_person": {
                        "type": "string",
                        "example": "John Smith"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@abcconstruction.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1-555-0123"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, City, State"
                    },
                    "tax_id": {
                        "type": "string",
                        "example": "TAX123456789"
                    },
                    "credit_limit": {
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "outstanding_balance": {
                        "type": "number",
                        "format": "float",
                        "example": 2500
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "quotations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QuotationResource"
                        }
                    },
                    "sales_orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SalesOrderResource"
                        }
                    },
                    "invoices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceResource"
                        }
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentResource"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "InvoiceResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "invoice_no": {
                        "type": "string",
                        "example": "INV-2024-001"
                    },
                    "customer_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "subtotal": {
                        "type": "number",
                        "format": "float",
                        "example": 2000
                    },
                    "tax_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 200
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 2200
                    },
                    "paid_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "balance_due": {
                        "type": "number",
                        "format": "float",
                        "example": 2200
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Payment due within 30 days"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ItemResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "code": {
                        "type": "string",
                        "example": "WOOD001"
                    },
                    "name": {
                        "type": "string",
                        "example": "Oak Hardwood Plank"
                    },
                    "species": {
                        "type": "string",
                        "example": "Oak"
                    },
                    "grade": {
                        "type": "string",
                        "example": "A"
                    },
                    "thickness": {
                        "type": "number",
                        "format": "float",
                        "example": 2.5
                    },
                    "width": {
                        "type": "number",
                        "format": "float",
                        "example": 6
                    },
                    "length": {
                        "type": "number",
                        "format": "float",
                        "example": 96
                    },
                    "unit": {
                        "type": "string",
                        "example": "pieces"
                    },
                    "barcode": {
                        "type": "string",
                        "example": "1234567890123"
                    },
                    "moisture_level": {
                        "type": "number",
                        "format": "float",
                        "example": 12.5
                    },
                    "low_stock_threshold": {
                        "type": "integer",
                        "example": 100
                    },
                    "costing_method": {
                        "type": "string",
                        "example": "FIFO"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "total_stock": {
                        "type": "integer",
                        "example": 500
                    },
                    "available_stock": {
                        "type": "integer",
                        "example": 450
                    },
                    "reserved_stock": {
                        "type": "integer",
                        "example": 50
                    },
                    "is_low_stock": {
                        "type": "boolean",
                        "example": false
                    },
                    "stock_lots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StockLotResource"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PaymentResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "payment_no": {
                        "type": "string",
                        "example": "PAY-2024-001"
                    },
                    "customer_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "invoice_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 1000
                    },
                    "payment_method": {
                        "type": "string",
                        "example": "bank_transfer"
                    },
                    "reference_no": {
                        "type": "string",
                        "example": "TXN123456789"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Payment for invoice INV-2024-001"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "QuotationResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quotation_no": {
                        "type": "string",
                        "example": "QUO-2024-001"
                    },
                    "customer_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quotation_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "valid_until": {
                        "type": "string",
                        "format": "date"
                    },
                    "subtotal": {
                        "type": "number",
                        "format": "float",
                        "example": 1000
                    },
                    "tax_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 1100
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Special pricing for bulk order"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SalesOrderResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_no": {
                        "type": "string",
                        "example": "SO-2024-001"
                    },
                    "customer_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "subtotal": {
                        "type": "number",
                        "format": "float",
                        "example": 2000
                    },
                    "tax_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 200
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 2200
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Rush order - deliver ASAP"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StockLotResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "lot_no": {
                        "type": "string",
                        "example": "LOT2024001"
                    },
                    "qty_on_hand": {
                        "type": "integer",
                        "example": 100
                    },
                    "qty_reserved": {
                        "type": "integer",
                        "example": 10
                    },
                    "qty_available": {
                        "type": "integer",
                        "example": 90
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "received_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "warehouse": {
                        "$ref": "#/components/schemas/WarehouseResource"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "WarehouseResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Main Warehouse"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Industrial Blvd, City, State"
                    },
                    "contact_person": {
                        "type": "string",
                        "example": "Jane Doe"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1-555-0456"
                    },
                    "email": {
                        "type": "string",
                        "example": "warehouse@company.com"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token in the format: Bearer {token}",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and authorization"
        },
        {
            "name": "Inventory",
            "description": "Item and stock management operations"
        },
        {
            "name": "Customers",
            "description": "Customer management operations"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}